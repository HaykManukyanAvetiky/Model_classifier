__Version 1.0 ~64%
model_clasifier_v_1_0.torch

Net(
  (features): Sequential(
    (layer1): TempletLayer(
      (conv): Conv2d(3, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (layer2): TempletLayer(
      (conv): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (layer3): TempletLayer(
      (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (classifier): Sequential(
    (fc1): Linear(in_features=128, out_features=64, bias=True)
    (relu1): ReLU()
    (dropout1): Dropout(p=0.3, inplace=False)
    (fc3): Linear(in_features=64, out_features=5, bias=True)
    (output): LogSoftmax()
  )
  (criterion): NLLLoss()
)



__Version 1.1 ~64%
model_clasifier_v_1_1.torch

Net(
  (features): Sequential(
    (layer1): TempletLayer(
      (conv): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (maxpul): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (layer2): TempletLayer(
      (conv): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (layer3): TempletLayer(
      (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (classifier): Sequential(
    (fc1): Linear(in_features=128, out_features=32, bias=True)
    (relu1): ReLU()
    (dropout1): Dropout(p=0.3, inplace=False)
    (fc3): Linear(in_features=32, out_features=5, bias=True)
    (output): LogSoftmax()
  )
  (criterion): NLLLoss()
)


__Version 1.2 ~61
model_clasifier_v_1_2.torch


Net(
  (features): Sequential(
    (layer1): TempletLayer(
      (conv): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (layer2): TempletLayer(
      (conv): Conv2d(64, 256, kernel_size=(5, 5), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (maxpool1): MaxPool2d(kernel_size=(5, 5), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (layer3): TempletLayer(
      (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (maxpool2): MaxPool2d(kernel_size=(3, 3), stride=(1, 1), padding=0, dilation=1, ceil_mode=False)
    (layer4): TempletLayer(
      (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (classifier): Sequential(
    (fc1): Linear(in_features=128, out_features=32, bias=True)
    (relu1): ReLU()
    (dropout1): Dropout(p=0.3, inplace=False)
    (fc3): Linear(in_features=32, out_features=5, bias=True)
    (output): LogSoftmax()
  )
  (criterion): NLLLoss()
)


__Version 1.3 ~61%
model_clasifier_v_1_3.torch

Net(
  (features): Sequential(
    (layer1): TempletLayer(
      (conv): Conv2d(3, 64, kernel_size=(5, 5), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (maxpool): MaxPool2d(kernel_size=(5, 5), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    )
    (layer2): TempletLayer(
      (conv): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (maxpool): MaxPool2d(kernel_size=(3, 3), stride=(1, 1), padding=0, dilation=1, ceil_mode=False)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (classifier): Sequential(
    (fc1): Linear(in_features=256, out_features=32, bias=True)
    (relu1): ReLU()
    (dropout1): Dropout(p=0.3, inplace=False)
    (fc3): Linear(in_features=32, out_features=5, bias=True)
    (output): LogSoftmax()
  )
  (criterion): NLLLoss()
)


__Version 1.4 ~61%
model_clasifier_v_1_4.torch


Net(
  (features): Sequential(
    (layer1): TempletLayer(
      (conv): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): AvgPool2d(kernel_size=(7, 7), stride=(2, 2), padding=0)
    )
    (layer2): TempletLayer(
      (conv): Conv2d(64, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): AvgPool2d(kernel_size=(3, 3), stride=(1, 1), padding=0)
    )
    (layer3): TempletLayer(
      (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): AvgPool2d(kernel_size=(3, 3), stride=(1, 1), padding=0)
    )
    (layer4): TempletLayer(
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): AvgPool2d(kernel_size=(1, 1), stride=(1, 1), padding=0)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (classifier): Sequential(
    (fc1): Linear(in_features=256, out_features=32, bias=True)
    (relu1): ReLU()
    (dropout1): Dropout(p=0.3, inplace=False)
    (fc3): Linear(in_features=32, out_features=5, bias=True)
    (output): LogSoftmax()
  )
  (criterion): NLLLoss()
)


__Version 1.5 ~61%
model_clasifier_v_1_5.torch

Net(
  (features): Sequential(
    (layer1): TempletLayer(
      (conv): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): AvgPool2d(kernel_size=(7, 7), stride=(2, 2), padding=0)
    )
    (layer2): TempletLayer(
      (conv): Conv2d(64, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): AvgPool2d(kernel_size=(3, 3), stride=(1, 1), padding=0)
    )
    (layer3): TempletLayer(
      (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): AvgPool2d(kernel_size=(3, 3), stride=(1, 1), padding=0)
    )
    (layer4): TempletLayer(
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (pool): AvgPool2d(kernel_size=(1, 1), stride=(1, 1), padding=0)
    )
    (maxpool2): MaxPool2d(kernel_size=(3, 3), stride=(1, 1), padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (classifier): Sequential(
    (fc1): Linear(in_features=256, out_features=32, bias=True)
    (relu1): ReLU()
    (dropout1): Dropout(p=0.3, inplace=False)
    (fc3): Linear(in_features=32, out_features=5, bias=True)
    (output): LogSoftmax()
  )
  (criterion): NLLLoss()
)


__Version 2.0 ~??% wrong
model_clasifier_v_2_0.torch

Net(
  (features): Sequential(
    (layer1): TempletLayer(
      (conv): Conv2d(3, 128, kernel_size=(7, 7), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (layer2): TempletLayer(
      (conv): Conv2d(128, 512, kernel_size=(5, 5), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (maxpool1): MaxPool2d(kernel_size=(3, 3), stride=(1, 1), padding=0, dilation=1, ceil_mode=False)
    (layer3): TempletLayer(
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (layer4): TempletLayer(
      (conv): Conv2d(256, 1024, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (maxpool2): MaxPool2d(kernel_size=(3, 3), stride=(1, 1), padding=0, dilation=1, ceil_mode=False)
    (layer5): TempletLayer(
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (layer6): TempletLayer(
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (maxpool3): MaxPool2d(kernel_size=(3, 3), stride=(1, 1), padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (classifier): Sequential(
    (dropout1): Dropout(p=0.3, inplace=False)
    (fc1): Linear(in_features=256, out_features=32, bias=True)
    (output): LogSoftmax()
  )
  (criterion): NLLLoss()
)


__Version 2.1 ~??%  Wrong
model_clasifier_v_2_1.torch


Net(
  (features): Sequential(
    (layer1): TempletLayer(
      (conv): Conv2d(3, 128, kernel_size=(5, 5), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (layer2): TempletLayer(
      (conv): Conv2d(128, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (layer3): TempletLayer(
      (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (maxpool2): MaxPool2d(kernel_size=(3, 3), stride=(1, 1), padding=0, dilation=1, ceil_mode=False)
    (layer4): TempletLayer(
      (conv): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (layer5): TempletLayer(
      (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (layer6): TempletLayer(
      (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (maxpool3): MaxPool2d(kernel_size=(3, 3), stride=(1, 1), padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (classifier): Sequential(
    (dropout1): Dropout(p=0.3, inplace=False)
    (fc1): Linear(in_features=256, out_features=32, bias=True)
    (output): LogSoftmax()
  )
  (criterion): NLLLoss()
)


__Version 3.0 ~64%
model_clasifier_v_3_0.torch

Net(
  (features): Sequential(
    (layer1): TempletLayer(
      (conv): Conv2d(3, 1024, kernel_size=(5, 5), stride=(2, 2), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (maxpool1): MaxPool2d(kernel_size=(3, 3), stride=(1, 1), padding=0, dilation=1, ceil_mode=False)
    (layer2): TempletLayer(
      (conv): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (maxpool2): MaxPool2d(kernel_size=(2, 2), stride=(1, 1), padding=0, dilation=1, ceil_mode=False)
    (layer3): TempletLayer(
      (conv): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (maxpool3): MaxPool2d(kernel_size=(2, 2), stride=(1, 1), padding=0, dilation=1, ceil_mode=False)
    (adtavgpool): AvgPool2d(kernel_size=(4, 4), stride=(4, 4), padding=0)
  )
  (adtpool): AdaptiveMaxPool2d(output_size=(1, 1))
  (classifier): Sequential(
    (dropout1): Dropout(p=0.3, inplace=False)
    (fc1): Linear(in_features=256, out_features=5, bias=True)
    (output): LogSoftmax()
  )
  (criterion): NLLLoss()
)




__Version 3.1 ~%
model_clasifier_v_3_1.torch

Net(
  (features): Sequential(
    (layer1): TempletLayer(
      (conv): Conv2d(3, 1024, kernel_size=(5, 5), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (maxpool1): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (layer2): TempletLayer(
      (conv): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (maxpool2): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
    (layer3): TempletLayer(
      (conv): Conv2d(512, 256, kernel_size=(2, 2), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
    )
    (maxpool3): MaxPool2d(kernel_size=(2, 2), stride=(2, 2), padding=0, dilation=1, ceil_mode=False)
  )
  (adtpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (classifier): Sequential(
    (dropout1): Dropout(p=0.4, inplace=False)
    (fc1): Linear(in_features=256, out_features=5, bias=True)
    (output): LogSoftmax()
  )
  (criterion): NLLLoss()
)